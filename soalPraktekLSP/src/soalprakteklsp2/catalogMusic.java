/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package soalprakteklsp2;

import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.MediaTracker;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectOutputStream;
import java.nio.file.CopyOption;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author BintangDiLangit
 */
public class catalogMusic extends javax.swing.JFrame {

    private DefaultTableModel model;
    private Image image;
    private ResultSet RsProduk = null;
    private File file;
    private String gambar;
    private Path copy, files;

    public catalogMusic() {
        this.setLocation(320, 150);
        model = new DefaultTableModel() {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        initComponents();
        tampilData();
        jTable1.setModel(model);
    }

    public void tampilData() {

        try {
            Object[] judul_kolom = {"ID Musik", "Judul Musik", "Album", "Artis", "Cover Album"};
            model = new DefaultTableModel(null, judul_kolom);
            jTable1.setModel(model);

            Connection conn = (Connection) koneksi.koneksiDB();
            Statement stt = conn.createStatement();
            model.getDataVector().removeAllElements();

            RsProduk = stt.executeQuery("SELECT * from lsp ");
            while (RsProduk.next()) {
                Object[] data = {
                    RsProduk.getString("id"),
                    RsProduk.getString("judul_musik"),
                    RsProduk.getString("album"),
                    RsProduk.getString("artis"),
                    RsProduk.getString("cover_album"),};
                model.addRow(data);
            }
        } catch (Exception ex) {
            System.err.println(ex.getMessage());
        }
    }
//
//    public void getData() {
//        try {
//            Statement stat = (Statement) koneksi.koneksiDB().createStatement();
//            String sql = "Select * from lsp";
//            ResultSet res = stat.executeQuery(sql);
//
//            while (res.next()) {
//                Object[] obj = new Object[5];
//                obj[0] = res.getString("id");
//                obj[1] = res.getString("judul_musik");
//                obj[2] = res.getString("album");
//                obj[3] = res.getString("artis");
//                obj[4] = res.getString("cover_album");
//
//                model.addRow(obj);
//
//            }
//
//        } catch (SQLException e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
//        }
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        judul = new javax.swing.JTextField();
        album = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtFoto = new javax.swing.JTextField();
        btnCari = new javax.swing.JButton();
        artis = new javax.swing.JTextField();
        tambah = new javax.swing.JButton();
        hapus = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        bersihkan = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        idCat = new javax.swing.JLabel();
        buttoncariData = new javax.swing.JButton();
        txtcaridata = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 270, 755, 194));

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Judul Musik");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 43, -1, -1));

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Album");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 80, -1, -1));

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Artis");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 117, -1, -1));
        getContentPane().add(judul, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 41, 163, -1));

        album.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                albumActionPerformed(evt);
            }
        });
        getContentPane().add(album, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 78, 163, -1));

        jLabel6.setText("Cover Album");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 70, -1, -1));

        txtFoto.setEditable(false);
        getContentPane().add(txtFoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 70, 110, -1));

        btnCari.setText("...");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });
        getContentPane().add(btnCari, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 70, 50, -1));
        getContentPane().add(artis, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 115, 163, -1));

        tambah.setText("Tambah");
        tambah.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tambahMouseClicked(evt);
            }
        });
        getContentPane().add(tambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, -1));

        hapus.setText("Hapus");
        hapus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hapusMouseClicked(evt);
            }
        });
        getContentPane().add(hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, -1, -1));

        edit.setText("Edit");
        edit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                editMouseEntered(evt);
            }
        });
        getContentPane().add(edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 230, -1, -1));

        bersihkan.setText("Bersihkan");
        bersihkan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bersihkanMouseClicked(evt);
            }
        });
        bersihkan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bersihkanActionPerformed(evt);
            }
        });
        getContentPane().add(bersihkan, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 230, -1, -1));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("ID Catalog");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 10, -1, -1));

        idCat.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(idCat, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 10, 87, 20));

        buttoncariData.setText("Cari");
        buttoncariData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                buttoncariDataMouseReleased(evt);
            }
        });
        buttoncariData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttoncariDataActionPerformed(evt);
            }
        });
        getContentPane().add(buttoncariData, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, -1));

        txtcaridata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcaridataActionPerformed(evt);
            }
        });
        getContentPane().add(txtcaridata, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 180, 140, -1));
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 760, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void albumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_albumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_albumActionPerformed

    // pembuatan fungsi tambah / insert data
    private void tambahMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tambahMouseClicked
        String jdl = judul.getText();
        String arts = album.getText();
        String albm = artis.getText();
        String cvr = txtFoto.getText();

        try {
            
            // validasi input
            if (!judul.equals("") && !albm.equals("") && !arts.equals("")) {
                InputStream in = new FileInputStream(cvr);
                PreparedStatement p = koneksi.koneksiDB().prepareStatement(""
                        + "insert into lsp (judul_musik,album,artis,cover_album) values (?,?,?,?)");
                p.setString(1, jdl);
                p.setString(2, arts);
                p.setString(3, albm);
                p.setBlob(4, in);
                p.executeUpdate();
                JOptionPane.showMessageDialog(null, "Data berhasil ditambahkan");

                bersihdata();

            } else {
                JOptionPane.showMessageDialog(null, "Data gagal ditambahkan");

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Data gagal ditambahkan");
            System.out.println(e);
        }
        tampilData();
    }//GEN-LAST:event_tambahMouseClicked

    public void bersihdata() {
        judul.setText("");
        album.setText("");
        artis.setText("");
        txtFoto.setText("");
    }
    private void bersihkanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bersihkanActionPerformed
        judul.setText("");
        artis.setText("");
        album.setText("");
        idCat.setText("");
        txtFoto.setText("");
    }//GEN-LAST:event_bersihkanActionPerformed

    private void editMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_editMouseEntered

    private void editMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editMouseClicked
        String jdl = judul.getText();
        String arts = artis.getText();
        String albm = album.getText();
        String id = idCat.getText();
        String cvr = txtFoto.getText();

//        String kelasValue = ComboGrup.getSelection().getActionCommand();
        try {
            
            //validasi input
            if (!judul.equals("") && !albm.equals("") && !arts.equals("") && !txtFoto.equals("")) {
                InputStream in = new FileInputStream(cvr);
                String sql = "update lsp set"
                        + " judul_musik = '" + jdl
                        + "', album = '" + arts
                        + "', artis = '" + albm
                        + "', cover_album = '" + in
                        + "' where id = '" + id + "'";
                Connection conn = (Connection) koneksi.koneksiDB();
                PreparedStatement stmt = conn.prepareStatement(sql);
                stmt.execute();
                JOptionPane.showMessageDialog(null, "Data Berhasil di Update");

//            this.componentForm("edit");
//            kosongForm();
                tampilData();
            } else {
                JOptionPane.showMessageDialog(null, "Data Gagal di Update");
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Data Gagal di Update");
            System.out.println(e);
        } catch (SQLException ex) {
            Logger.getLogger(catalogMusic.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(catalogMusic.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_editMouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int baris = jTable1.getSelectedRow();
        if (baris > -1) {
            idCat.setText(jTable1.getValueAt(baris, 0).toString());
            judul.setText(jTable1.getValueAt(baris, 1).toString());
            album.setText(jTable1.getValueAt(baris, 2).toString());
            artis.setText(jTable1.getValueAt(baris, 3).toString());
            txtFoto.setText(jTable1.getValueAt(baris, 4).toString());
        }

    }//GEN-LAST:event_jTable1MouseClicked

    private void hapusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hapusMouseClicked
        int ok = JOptionPane.showConfirmDialog(null, "Apakah Yakin Mendelete record ini???", "Confirmation", JOptionPane.YES_NO_CANCEL_OPTION);
        if (ok == 0) {
            try {
                String del = "delete from lsp where id='" + idCat.getText() + "'";
                PreparedStatement st = koneksi.koneksiDB().prepareStatement(del);
                st.executeUpdate();
                JOptionPane.showMessageDialog(null, "Delete Data Sukses");
                tampilData();

//                this.componentForm("awal");
//            kosongForm();
                bersihdata();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Delete Data Gagal");
            }
        }
    }//GEN-LAST:event_hapusMouseClicked

    private void bersihkanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bersihkanMouseClicked
        judul.setText("");
        artis.setText("");
        album.setText("");
        idCat.setText("");
        txtcaridata.setText("");
    }//GEN-LAST:event_bersihkanMouseClicked

//    public void setImage(Image image){
//        this.image = image;
//        MediaTracker mediaTracker = new MediaTracker(this);
//        mediaTracker.addImage(image, 0);
//        try {
//            mediaTracker.waitForID(0);
//        } catch (InterruptedException ex) {
//            System.out.print(ex);
//        }
//        initComponents();
//    }
    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        JFileChooser chooser = new JFileChooser(System.getProperty("user.home"));
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.setFileFilter(new FileNameExtensionFilter("jpg|png|bmp", "jpg", "png", "bmp"));

        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            try {
                image = ImageIO.read(file);

            } catch (IOException ex) {
                System.out.print(ex);
            }
            txtFoto.setText(file.getAbsolutePath());
        }
    }//GEN-LAST:event_btnCariActionPerformed

    // membuat fungsi cari data berdasarkan judul, album, album
    private void buttoncariDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttoncariDataActionPerformed

    }//GEN-LAST:event_buttoncariDataActionPerformed

    private void txtcaridataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcaridataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcaridataActionPerformed

    // memvalidasi data dengan inputan user
    private void buttoncariDataMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttoncariDataMouseReleased
        String key = txtcaridata.getText();
//        System.out.println(key);  

        if (key != "") {
            cariData(key);
        } else {
            tampilData();
        }
    }//GEN-LAST:event_buttoncariDataMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(catalogMusic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(catalogMusic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(catalogMusic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(catalogMusic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new catalogMusic().setVisible(true);
            }
        });
    }

    // membuat fungsi caridata 
    private void cariData(String key) {
        try {
            Object[] judul_kolom = {"ID Musik", "Judul Musik", "Album", "Artis", "Cover Album"};
            model = new DefaultTableModel(null, judul_kolom);
            jTable1.setModel(model);

            Connection conn = (Connection) koneksi.koneksiDB();
            Statement stt = conn.createStatement();
            model.getDataVector().removeAllElements();

            // query dari cari data
            RsProduk = stt.executeQuery("SELECT * from lsp WHERE judul_musik LIKE '%" + key + "%' OR album LIKE '%" + key + "%' OR artis LIKE '%" + key + "%'");
            while (RsProduk.next()) {
                Object[] data = {
                    RsProduk.getString("id"),
                    RsProduk.getString("judul_musik"),
                    RsProduk.getString("album"),
                    RsProduk.getString("artis"),
                    RsProduk.getString("cover_album"),};
                model.addRow(data);
            }
        } catch (Exception ex) {
            System.err.println(ex.getMessage());
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField album;
    private javax.swing.JTextField artis;
    private javax.swing.JButton bersihkan;
    private javax.swing.JButton btnCari;
    private javax.swing.JButton buttoncariData;
    private javax.swing.JButton edit;
    private javax.swing.JButton hapus;
    private javax.swing.JLabel idCat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField judul;
    private javax.swing.JButton tambah;
    private javax.swing.JTextField txtFoto;
    private javax.swing.JTextField txtcaridata;
    // End of variables declaration//GEN-END:variables

}
